<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Development | Andrew Hammond]]></title>
  <link href="http://andrhamm.com/blog/categories/development/atom.xml" rel="self"/>
  <link href="http://andrhamm.com/"/>
  <updated>2014-09-11T13:40:40-04:00</updated>
  <id>http://andrhamm.com/</id>
  <author>
    <name><![CDATA[Andrew Hammond]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Update Java to Fix ElasticSearch "Unsupported major.minor Version 51.0"]]></title>
    <link href="http://andrhamm.com/blog/2014/08/04/update-java-to-fix-elasticsearch-unsupported-major-dot-minor-version-51-dot-0/"/>
    <updated>2014-08-04T15:11:54-04:00</updated>
    <id>http://andrhamm.com/blog/2014/08/04/update-java-to-fix-elasticsearch-unsupported-major-dot-minor-version-51-dot-0</id>
    <content type="html"><![CDATA[<p>When I went to install ElasticSearch with Homebrew on Mac OS X, I got the following error message when trying to start up ElasticSearch: <code>"Unsupported major.minor version 51.0"</code>. I found the experience kind of sucky, with a lot of misleading or generally unhelpful posts out there when Googling. So naturally I figured I&rsquo;d add to the confusion. Here is how I solved the problem on my machine. <!-- more --></p>

<p>Find out which version of Java you are using:</p>

<pre><code>java -version
</code></pre>

<p>This is probably 1.6 if you are on Mac OS X. That was my case, and I needed 1.7 for ElasticSearch.</p>

<p>See where your Java lives:</p>

<pre><code>which java
</code></pre>

<p>This is probably <code>/usr/bin/java</code> if you haven&rsquo;t monkied with your native install.</p>

<p>Download <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html">JDK 1.7</a></p>

<pre><code>http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html
</code></pre>

<p>I restarted at this point but my symlink (<code>which java</code>) didn&rsquo;t update. It seems like kind of a shitty way to get what you want, but setting your <code>JAVA_HOME</code> environment variable will now point your scripts to the right version:</p>

<pre><code>export JAVA_HOME="`/usr/libexec/java_home -v '1.7*'`"
</code></pre>

<p>This sort of stuff seems to come up anytime you mention JDK or JVM being a dependency of anything. Sweet dice&hellip;</p>
]]></content>
  </entry>
  
</feed>
